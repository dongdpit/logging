input {  
  tcp {
    type => "syslog"
    port => 5555
    tags => "pfsense"
  }
  udp {
    type => "syslog"
    port => 5555
    tags => "pfsense"
  }
}

filter{
if "pfsense" in [tags] {
grok {
match => {
  "message" => ["%{SYSLOGTIMESTAMP:Log_time} %{DATA:Squid} %{NUMBER:Unix_Time} %{WORD:Elapsed} %{IPORHOST:Remote_host} %{DATA:Code_status} %{NUMBER:Bytes:int} %{WORD:Method} %{DATA:URL} %{NOTSPACE:rfc931} %{DATA:Peerstatus_peerhost} %{NOTSPACE:Type}",
                "%{SYSLOGTIMESTAMP:Log_time} %{DATA:Squid} %{NUMBER:Unix_Time}%{SPACE}%{WORD:Elapsed} %{IPORHOST:Remote_host} %{DATA:Code_status} %{NUMBER:Bytes:int} %{WORD:Method} %{DATA:URL} %{NOTSPACE:rfc931} %{DATA:Peerstatus_peerhost} %{NOTSPACE:Type}"]
}
}

mutate {
remove_field => "@timestamp"
}


date {
match => ["Log_time", "MMM  d HH:mm:ss","MMM dd HH:mm:ss"]
target => "Log_time"
}

}
}

output {
#stdout { codec => rubydebug }
   if "pfsense" in [tags] {
     elasticsearch {
      hosts => ["https://ip:9200"]
      user => "elastic"
      password => "conan@123456"
      cacert => '/etc/logstash/conf.d/http_ca.crt'
      ilm_policy => "30-days-default"
      ilm_rollover_alias => "pfsense-alias"
      ilm_pattern => "log-pfsense-%{+yyyy.MM.dd}-000001"
    }
   }
}



